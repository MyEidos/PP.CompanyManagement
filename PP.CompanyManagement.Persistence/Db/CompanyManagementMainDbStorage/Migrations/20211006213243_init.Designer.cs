// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PP.CompanyManagement.Persistence.Db.CompanyManagementMainDbStorage.Context;

namespace PP.CompanyManagement.Persistence.Db.CompanyManagementMainDbStorage.Migrations
{
    [DbContext(typeof(CompanyManagementMainDbContext))]
    [Migration("20211006213243_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cm")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PP.CompanyManagement.Core.Entities.EmployeeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("Created")
                        .HasColumnType("datetimeoffset")
                        .HasComment("Entity created date time.");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasComment("Value indicating whether the entity is active.");

                    b.Property<string>("LastName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("datetimeoffset")
                        .HasComment("Entity last updated date time.");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasCheckConstraint("CK_Employees_BusinessId_PersonnelNumber_BusinessId_Type", "([BusinessId_Type] = 1 AND [BusinessId_PersonnelNumber] IS NOT NULL) OR ([BusinessId_Type] = 2 AND [BusinessId_PersonnelNumber] IS NULL)");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            Created = new DateTimeOffset(new DateTime(2021, 10, 6, 21, 32, 42, 749, DateTimeKind.Unspecified).AddTicks(8101), new TimeSpan(0, 0, 0, 0, 0)),
                            DOB = new DateTime(2021, 10, 6, 21, 32, 42, 749, DateTimeKind.Utc).AddTicks(6156),
                            FirstName = "first0",
                            Gender = 1,
                            IsActive = true,
                            LastName = "last0",
                            MiddleName = "middle0"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000002"),
                            Created = new DateTimeOffset(new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Unspecified).AddTicks(8489), new TimeSpan(0, 0, 0, 0, 0)),
                            DOB = new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Utc).AddTicks(8479),
                            FirstName = "first1",
                            Gender = 1,
                            IsActive = true,
                            LastName = "last1",
                            MiddleName = "middle1"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            Created = new DateTimeOffset(new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Unspecified).AddTicks(8823), new TimeSpan(0, 0, 0, 0, 0)),
                            DOB = new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Utc).AddTicks(8819),
                            FirstName = "first2",
                            Gender = 1,
                            IsActive = true,
                            LastName = "last2",
                            MiddleName = "middle2"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000004"),
                            Created = new DateTimeOffset(new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Unspecified).AddTicks(8984), new TimeSpan(0, 0, 0, 0, 0)),
                            DOB = new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Utc).AddTicks(8981),
                            FirstName = "first3",
                            Gender = 1,
                            IsActive = true,
                            LastName = "last3",
                            MiddleName = "middle3"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000005"),
                            Created = new DateTimeOffset(new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Unspecified).AddTicks(9128), new TimeSpan(0, 0, 0, 0, 0)),
                            DOB = new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Utc).AddTicks(9125),
                            FirstName = "first4",
                            Gender = 1,
                            IsActive = true,
                            LastName = "last4",
                            MiddleName = "middle4"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000006"),
                            Created = new DateTimeOffset(new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Unspecified).AddTicks(9309), new TimeSpan(0, 0, 0, 0, 0)),
                            DOB = new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Utc).AddTicks(9306),
                            FirstName = "first5",
                            Gender = 1,
                            IsActive = true,
                            LastName = "last5",
                            MiddleName = "middle5"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000007"),
                            Created = new DateTimeOffset(new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Unspecified).AddTicks(9444), new TimeSpan(0, 0, 0, 0, 0)),
                            DOB = new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Utc).AddTicks(9441),
                            FirstName = "first6",
                            Gender = 1,
                            IsActive = true,
                            LastName = "last6",
                            MiddleName = "middle6"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000008"),
                            Created = new DateTimeOffset(new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Unspecified).AddTicks(9578), new TimeSpan(0, 0, 0, 0, 0)),
                            DOB = new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Utc).AddTicks(9575),
                            FirstName = "first7",
                            Gender = 1,
                            IsActive = true,
                            LastName = "last7",
                            MiddleName = "middle7"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            Created = new DateTimeOffset(new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Unspecified).AddTicks(9747), new TimeSpan(0, 0, 0, 0, 0)),
                            DOB = new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Utc).AddTicks(9743),
                            FirstName = "first8",
                            Gender = 1,
                            IsActive = true,
                            LastName = "last8",
                            MiddleName = "middle8"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            Created = new DateTimeOffset(new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Unspecified).AddTicks(9891), new TimeSpan(0, 0, 0, 0, 0)),
                            DOB = new DateTime(2021, 10, 6, 21, 32, 42, 750, DateTimeKind.Utc).AddTicks(9888),
                            FirstName = "first9",
                            Gender = 1,
                            IsActive = true,
                            LastName = "last9",
                            MiddleName = "middle9"
                        });
                });

            modelBuilder.Entity("PP.CompanyManagement.Core.Entities.ImportEmployeeResult", b =>
                {
                    b.Property<string>("ActionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessIdPersonnelNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BusinessId_PersonnelNumber");

                    b.Property<int?>("BusinessIdType")
                        .HasColumnType("int")
                        .HasColumnName("BusinessId_Type");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");
                });

            modelBuilder.Entity("PP.CompanyManagement.Core.Entities.EmployeeEntity", b =>
                {
                    b.OwnsOne("PP.CompanyManagement.Core.Entities.EmployeeEntity+BussinessIdObj", "BusinessId", b1 =>
                        {
                            b1.Property<Guid>("EmployeeEntityId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("PersonnelNumber")
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)");

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.HasKey("EmployeeEntityId");

                            b1.HasIndex("Type", "PersonnelNumber")
                                .IsUnique()
                                .HasFilter("[BusinessId_Type] IS NOT NULL AND [BusinessId_PersonnelNumber] IS NOT NULL");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeEntityId");

                            b1.HasData(
                                new
                                {
                                    EmployeeEntityId = new Guid("00000000-0000-0000-0000-000000000001"),
                                    PersonnelNumber = "0",
                                    Type = 1
                                },
                                new
                                {
                                    EmployeeEntityId = new Guid("00000000-0000-0000-0000-000000000002"),
                                    PersonnelNumber = "1",
                                    Type = 1
                                },
                                new
                                {
                                    EmployeeEntityId = new Guid("00000000-0000-0000-0000-000000000003"),
                                    PersonnelNumber = "2",
                                    Type = 1
                                },
                                new
                                {
                                    EmployeeEntityId = new Guid("00000000-0000-0000-0000-000000000004"),
                                    PersonnelNumber = "3",
                                    Type = 1
                                },
                                new
                                {
                                    EmployeeEntityId = new Guid("00000000-0000-0000-0000-000000000005"),
                                    PersonnelNumber = "4",
                                    Type = 1
                                },
                                new
                                {
                                    EmployeeEntityId = new Guid("00000000-0000-0000-0000-000000000006"),
                                    PersonnelNumber = "5",
                                    Type = 1
                                },
                                new
                                {
                                    EmployeeEntityId = new Guid("00000000-0000-0000-0000-000000000007"),
                                    PersonnelNumber = "6",
                                    Type = 1
                                },
                                new
                                {
                                    EmployeeEntityId = new Guid("00000000-0000-0000-0000-000000000008"),
                                    PersonnelNumber = "7",
                                    Type = 1
                                },
                                new
                                {
                                    EmployeeEntityId = new Guid("00000000-0000-0000-0000-000000000009"),
                                    PersonnelNumber = "8",
                                    Type = 1
                                },
                                new
                                {
                                    EmployeeEntityId = new Guid("00000000-0000-0000-0000-000000000010"),
                                    PersonnelNumber = "9",
                                    Type = 1
                                });
                        });

                    b.Navigation("BusinessId");
                });
#pragma warning restore 612, 618
        }
    }
}
